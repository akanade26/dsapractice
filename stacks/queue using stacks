class MyQueue {
    stack <int> s1;
    stack <int> s2;
public:
    MyQueue() {
        
        
    }
    
    void push(int x) {
        s1.push(x);
        
        
    }
    
    int pop() {
        if(!s2.empty())   // if s2 not empty then pop s2
            int ans = s2.top();
            s2.pop();
            return ans;
        }
        else
        {
            while(!s1.empty())  //if s2 is empty push elements of s1 to s2 and then pop s2, till all elements of s1 are pushed to s2
            {
                s2.push(s1.top());
                s1.pop();
            }
            int ans = s2.top();
            s2.pop();
            return ans;
        }
        
    }
    // if s2 is not empty then return top of s2 and if s2 is empty
    
    int peek() {
        if(!s2.empty())
        {
            return s2.top();

        }
        else
        {
            while(!s1.empty())
            {
                s2.push(s1.top());
                s1.pop();
            }
            return s2.top();
        }
        
    }
    
    bool empty() {
        if(s1.empty() && s2.empty())
        {
            return true;
        }
        else
        {
            return false;
        }
    }
};
